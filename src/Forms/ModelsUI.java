/******************************************************************************
 *
 * @author Esteban Valderrama and Marcelo Marucho
 * Description: This Class contains the Models JFrame design.
 *
 *****************************************************************************/
package Forms;

import Classes.IonLibrary;
import Classes.PHModel;
import Classes.Results;
import Classes.Solute;
import Classes.Utilities;
import Splash.SplashScreenUI;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import Procedures.CreatePlots;
import Procedures.LoadFiles;
import Procedures.SetEnvironment;
import Procedures.ShowMessages;
import Procedures.ValidateOS;
//import java.awt.Component;
import java.awt.Desktop;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import javax.swing.ToolTipManager;
import jmolapp.Jmolapp;
       

public class ModelsUI extends javax.swing.JFrame {

    private SplashScreenUI splashFrame;
    
// Constructor updates the the label and progress bar in the Splash Screen 
    public ModelsUI(SplashScreenUI splashFrame) throws IOException{
        initComponents(); //  Initialize ModelsUI JFrame components
        this.splashFrame = splashFrame;
        // Update progress bar
        ValidateOS.OSValidator();
        setProgress(0, "Starting ...");
        setProgress(4, "Checking system requirements ...");
        setProgress(5, "Completed. ");
        setProgress(8, "Loading files");
        setProgress(12, "Loading executables");
        setProgress(15, "Loading libraries");
        setProgress(20, "Loading environment");
        try{
            ModelsUI.setDefaultLookAndFeelDecorated(true);
            JDialog.setDefaultLookAndFeelDecorated(true);
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }catch(ClassNotFoundException | InstantiationException | 
                IllegalAccessException | UnsupportedLookAndFeelException e){
        }
        // Update progress bar
        setProgress(22, "Completed. ");
        setProgress(23, "Loading modules");
        setProgress(30, "Completed. ");
        setProgress(50, "Loading interface.");
        setProgress(80, "Completed.");
        setProgress(96, "CSDFTS is ready to use");
        setProgress(98, "CSDFTS is ready to use");
        setProgress(100, "Welcome");
        SetEnvironment.set_directory();
        this.setLocationRelativeTo(null); // Open ModelsUI GUI in the center of the screen  
        this.setTitle("Java Application for Cytoskeleton FIlaments Characterization (JACFC) V1.0");
    }
 
// This constructor is used when the user wants a new analsysis
    public ModelsUI() { 
        initComponents(); //  Initialize ModelsUI JFrame components
        ValidateOS.OSValidator();
        this.setLocationRelativeTo(null); // Open ModelsUI GUI in the center of the screen 

    }

// This method fills the progress bar and changes the label message
    private void setProgress(int percent, String information){
        splashFrame.getLabel().setText(information);
        splashFrame.getProgressBar().setValue(percent);
        
        try {
            Thread.sleep(700);
        } catch (InterruptedException ex) {
            Toolkit.getDefaultToolkit().beep(); 
            JOptionPane.showMessageDialog(null, ShowMessages.getOpeningProgress(),
                    null, JOptionPane.WARNING_MESSAGE);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        dkpModels = new javax.swing.JPanel();
        lbl1 = new javax.swing.JLabel();
        pnlContainer = new javax.swing.JPanel();
        pnlNanomaterials = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        rbnGlobularProtein = new javax.swing.JRadioButton();
        rbnBiopolymer = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        rbnNanoparticle = new javax.swing.JRadioButton();
        rbnNanorod = new javax.swing.JRadioButton();
        pnlAnalysisModules = new javax.swing.JPanel();
        rbnPB = new javax.swing.JRadioButton();
        rbnSPM = new javax.swing.JRadioButton();
        desktopModelsMenu = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mnuOpenOutput = new javax.swing.JMenuItem();
        mnuExit = new javax.swing.JMenuItem();
        mnuTools = new javax.swing.JMenu();
        mnuBrowsePdb = new javax.swing.JMenuItem();
        mnuCrystalIon = new javax.swing.JMenuItem();
        mnuEffectiveIon = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        mnuHelp = new javax.swing.JMenu();
        mnuOpenGuide = new javax.swing.JMenuItem();
        mnuContact = new javax.swing.JMenuItem();
        mnuLicense = new javax.swing.JMenuItem();

        jMenuItem7.setText("jMenuItem7");

        jMenuItem8.setText("jMenuItem8");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Classical Solvation Density Functional Theory Solver (CSDFTS) - V1.0");
        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(763, 473));
        setName("frModels"); // NOI18N
        setResizable(false);

        dkpModels.setBackground(new java.awt.Color(255, 255, 255));

        lbl1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl1.setText("<html><center>This Java application provides suitable tools to determine the polyelectrolyte nature of cytoskeleton filaments. By using comprehensive computer models and high performance algorithms, the software aims to produce valuable data for elucidating the molecular mechanisms modulating the electrical signal propagation, stability and bundle formation of microtubules and F-actin filaments under different molecular (wild type, isoforms, mutants) and environmental (physiological and non-physiological) conditions. Ultimately, these studies may figure out whether molecular and cellular alterations substantially alter the equilibrium of interactions and trigger abnormalities in the bundling and signal propagation during various disease states. </html>");

        pnlContainer.setBackground(new java.awt.Color(255, 255, 255));
        pnlContainer.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        pnlNanomaterials.setBackground(java.awt.Color.white);
        pnlNanomaterials.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Select The  Research Study", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Dialog", 0, 12), java.awt.Color.blue)); // NOI18N
        pnlNanomaterials.setForeground(java.awt.Color.black);
        pnlNanomaterials.setToolTipText("<html><center>According to available experimental data, eukaryotic cells may transport metal ions such as calcium<br> preferentially along the surface of F-actin and microtubules. This is related to the condensation of<br> counterions in the diffusive layer of the electrical double layer, which move freely along these filaments.<br>  These (bionanowire) ionic currents have been investigated theoretically using conventional nonlinear<br> dispersive electric circuit transmission line models, revealing slow localized travelling waves (solitons) along F-<br> actin and MTs (RSC Adv.,2018,8,12017-12028). Polyelectrolyte properties were also found to play a fundamental role in the stability of<br> the polymerization state of these filaments, which are extremely sensitive to intracellular environment<br> conditions. Another compelling polyelectrolyte feature is related to the charge accumulated in the<br> polymerization state, which has been shown to alter its ability to interact electrostatically. Similarly, tubulin and<br> G-actin isoforms have different charges according to their amino acid sequence. Thus, filaments formed by<br> these isoforms might be more susceptible to bundling at borderline conditions. In a similar vein, mutations<br> reduce the charge of actin and have reportedly caused the mutant filaments to spontaneously bundle. It<br> was also noted that cross-linking is not always required for bundle formation when sufficient filament surface<br> charge neutralization can directly induce bundling due to charge inversion. All of these observations<br> provide evidence on the polyelectrolyte nature of F-actin and MTs associated with the formation of an electrical<br> double layer, which provides unique, even still poorly understood, conducting and bundling formation<br> properties. CSDFT simulations on cylindrical biomolecules revealed that three competing / balanced molecular<br> mechanisms (water crowding, electrostatic screening ion correlation, mean electric potential) play a crucial role<br> on bundling formation (zeta potential, charge inversion) and electric signal propagation (peak, width, velocity)<br> properties (RSC Adv.,2018,8,12017-12028;J.Chem.Phys.141,2014,225103). <br>These molecular mechanisms were found to depend on the pH level, electrolyte condition, and the<br> effective radius and surface charge density of the filament. Accordingly, CSDFT is expected to be an<br> efficient tool to study multiple intracellular environment scenarios for a variety of cytoskeleton filament<br> structures.");
        javax.swing.ToolTipManager.sharedInstance().setDismissDelay(40000);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Stability and Aggregation"));

        buttonGroup1.add(rbnGlobularProtein);
        rbnGlobularProtein.setText("High Conc. (Bundle and Network Formation)");
        rbnGlobularProtein.setEnabled(false);
        rbnGlobularProtein.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbnGlobularProteinActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbnBiopolymer);
        rbnBiopolymer.setText("Dilute Conc. (Single Filament Characterization)");
        rbnBiopolymer.setToolTipText("");
        rbnBiopolymer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbnBiopolymerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbnGlobularProtein)
                    .addComponent(rbnBiopolymer)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbnGlobularProtein)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbnBiopolymer)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Electrical Signal Propagation"));

        buttonGroup1.add(rbnNanoparticle);
        rbnNanoparticle.setText("Actin FIlament");
        rbnNanoparticle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbnNanoparticleActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbnNanorod);
        rbnNanorod.setText("Microtubules");
        rbnNanorod.setEnabled(false);
        rbnNanorod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbnNanorodActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbnNanoparticle)
                    .addComponent(rbnNanorod))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbnNanoparticle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbnNanorod)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlNanomaterialsLayout = new javax.swing.GroupLayout(pnlNanomaterials);
        pnlNanomaterials.setLayout(pnlNanomaterialsLayout);
        pnlNanomaterialsLayout.setHorizontalGroup(
            pnlNanomaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNanomaterialsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlNanomaterialsLayout.setVerticalGroup(
            pnlNanomaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNanomaterialsLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(pnlNanomaterialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel2.getAccessibleContext().setAccessibleName("Electrical signal propagation");

        pnlAnalysisModules.setBackground(new java.awt.Color(255, 255, 255));
        pnlAnalysisModules.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Select The Electrolyte Aqueous Solution Model", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Dialog", 0, 12), java.awt.Color.blue)); // NOI18N
        pnlAnalysisModules.setToolTipText("<html><div style=\\\"text-align: center;\\\"<br>JACFC offers two electrolyte aqueous solution theories to describe the<br> structural and electrostatic properties of liquids surrounding macroions. <br>One of the most used approaches is the Non Linear Poisson-Boltzmann (NLPB) <br>equation due to its high efficiency in describing electrostatic properties<br> of macroions immersed in dilute mono-valent electrolyte solutions. <br>CSDFT (J.Chem.Phys.141,2014,225103) extends the capabilities <br> of NLPB by accounting for particle crowding and <br>ion-ion correlation effects, features certainly indispensables<br> to yield a quantitative description of liquids interacting with a macroion. <br>JACFC offers low computational cost and good accuracy depending on <br>the electrolyte model and approximate approach used to perform the calculations. <br>As a thumb rule, NLPB is more efficient but less accuracy than CSDFT. <br>The selection of the electrolyte theory basically depends on<br> the user computational resources, the electrolyte conditions, <br>physicochemical properties of the solute, and requested accuracy. <br>CSDFT is a unique feature of JACFC whereas NLPB theory is included <br>in the software for testing and comparison purposes, mainly.");
        javax.swing.ToolTipManager.sharedInstance().setDismissDelay(40000);

        buttonGroup2.add(rbnPB);
        rbnPB.setText("Electrostatic interactions only (Continuum Solvent Model)");
        rbnPB.setEnabled(false);
        rbnPB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbnPBActionPerformed(evt);
            }
        });

        buttonGroup2.add(rbnSPM);
        rbnSPM.setText(" Water Crowding, Ion correlation, and Electrical interactions (Explicit Solvent Model)");
        rbnSPM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbnSPMActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAnalysisModulesLayout = new javax.swing.GroupLayout(pnlAnalysisModules);
        pnlAnalysisModules.setLayout(pnlAnalysisModulesLayout);
        pnlAnalysisModulesLayout.setHorizontalGroup(
            pnlAnalysisModulesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAnalysisModulesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAnalysisModulesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbnSPM)
                    .addComponent(rbnPB))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlAnalysisModulesLayout.setVerticalGroup(
            pnlAnalysisModulesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAnalysisModulesLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(rbnPB)
                .addGap(18, 18, 18)
                .addComponent(rbnSPM)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlContainerLayout = new javax.swing.GroupLayout(pnlContainer);
        pnlContainer.setLayout(pnlContainerLayout);
        pnlContainerLayout.setHorizontalGroup(
            pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlContainerLayout.createSequentialGroup()
                .addContainerGap(200, Short.MAX_VALUE)
                .addGroup(pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlAnalysisModules, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlNanomaterials, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(116, 116, 116))
        );
        pnlContainerLayout.setVerticalGroup(
            pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlNanomaterials, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlAnalysisModules, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pnlNanomaterials.getAccessibleContext().setAccessibleName("Select the Macroion Model");
        pnlAnalysisModules.getAccessibleContext().setAccessibleName("Select the Electrolyte Model");

        javax.swing.GroupLayout dkpModelsLayout = new javax.swing.GroupLayout(dkpModels);
        dkpModels.setLayout(dkpModelsLayout);
        dkpModelsLayout.setHorizontalGroup(
            dkpModelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlContainer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(dkpModelsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        dkpModelsLayout.setVerticalGroup(
            dkpModelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dkpModelsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        desktopModelsMenu.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N

        mnuFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/file.png"))); // NOI18N
        mnuFile.setText("File");
        mnuFile.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        mnuOpenOutput.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        mnuOpenOutput.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/open_outputfile.png"))); // NOI18N
        mnuOpenOutput.setText("Results Visualization");
        mnuOpenOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuOpenOutputActionPerformed(evt);
            }
        });
        mnuFile.add(mnuOpenOutput);

        mnuExit.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        mnuExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/exit.png"))); // NOI18N
        mnuExit.setText("Exit");
        mnuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuExitActionPerformed(evt);
            }
        });
        mnuFile.add(mnuExit);

        desktopModelsMenu.add(mnuFile);

        mnuTools.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/tools.png"))); // NOI18N
        mnuTools.setText("Tools");
        mnuTools.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        mnuBrowsePdb.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        mnuBrowsePdb.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/website.png"))); // NOI18N
        mnuBrowsePdb.setText("Browse PDB Files");
        mnuBrowsePdb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuBrowsePdbActionPerformed(evt);
            }
        });
        mnuTools.add(mnuBrowsePdb);

        mnuCrystalIon.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        mnuCrystalIon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/doc.png"))); // NOI18N
        mnuCrystalIon.setText("Crystal Ion Library");
        mnuCrystalIon.setToolTipText("");
        mnuCrystalIon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCrystalIonActionPerformed(evt);
            }
        });
        mnuTools.add(mnuCrystalIon);

        mnuEffectiveIon.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        mnuEffectiveIon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/doc.png"))); // NOI18N
        mnuEffectiveIon.setText("Effective Ion Library");
        mnuEffectiveIon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuEffectiveIonActionPerformed(evt);
            }
        });
        mnuTools.add(mnuEffectiveIon);

        jMenuItem1.setFont(new java.awt.Font("Tahoma", 0, 13));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/doc.png"))); // NOI18N
        jMenuItem1.setText("Hydrated Ion Library");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuHydratedIonActionPerformed(evt);
            }
        });
        mnuTools.add(jMenuItem1);

        desktopModelsMenu.add(mnuTools);

        mnuHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/help.png"))); // NOI18N
        mnuHelp.setText("Help");
        mnuHelp.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        mnuOpenGuide.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        mnuOpenGuide.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/doc.png"))); // NOI18N
        mnuOpenGuide.setText("Stability and Agregation user guide");
        mnuOpenGuide.setToolTipText("");
        mnuOpenGuide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuOpenGuideActionPerformed(evt);
            }
        });
        mnuHelp.add(mnuOpenGuide);

        mnuContact.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        mnuContact.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/mail.png"))); // NOI18N
        mnuContact.setText("Contact Us");
        mnuContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuContactActionPerformed(evt);
            }
        });
        mnuHelp.add(mnuContact);

        mnuLicense.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        mnuLicense.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/doc.png"))); // NOI18N
        mnuLicense.setText("Electrical Signal Propgation user guide");
        mnuLicense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuLicenseActionPerformed(evt);
            }
        });
        mnuHelp.add(mnuLicense);

        desktopModelsMenu.add(mnuHelp);

        setJMenuBar(desktopModelsMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dkpModels, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dkpModels, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuLicenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuLicenseActionPerformed
//        LicenseUI License = new LicenseUI();
//        License.setVisible(true);
        if (Desktop.isDesktopSupported()) {
            try {
                File f = new File("ElectricalSignalPropagation.pdf");
               // System.out.println(f.getAbsolutePath());//
                if(f.exists() && !f.isDirectory()){
                    File myFile = new File("ElectricalSignalPropagation.pdf");
                    Desktop.getDesktop().open(myFile);
                }else{
                    Toolkit.getDefaultToolkit().beep();
                    JOptionPane.showMessageDialog(null, 
                            ShowMessages.getOpenUserManual(), null, 
                            JOptionPane.WARNING_MESSAGE); 
                }
            } catch (IOException ex) {
                Toolkit.getDefaultToolkit().beep(); 
                JOptionPane.showMessageDialog(null, 
                            ShowMessages.getNoPDFSoftware(), null, 
                            JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_mnuLicenseActionPerformed

    private void mnuContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuContactActionPerformed
        EmailUI Email = new EmailUI(); 
        Email.setVisible(true);
    }//GEN-LAST:event_mnuContactActionPerformed

    private void mnuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuExitActionPerformed
        int answer = 0;
        answer = JOptionPane.showConfirmDialog(null, ShowMessages.getExitProgram(), 
                "EXIT PROGRAM", JOptionPane.YES_NO_OPTION);        
        if (answer == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_mnuExitActionPerformed

    private void mnuOpenOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuOpenOutputActionPerformed
        OpenOutputUI OpenOutput = new OpenOutputUI(); 
        Results.setOpeningOutput(true); 
        LoadFiles.load_output_file();
        if(Results.isOpeningOutput()){
            CreatePlots.create_plots();
        }
        if(Results.isOpeningOutput()){
            OpenOutput.setVisible(true);
        }
    }//GEN-LAST:event_mnuOpenOutputActionPerformed

    private void mnuOpenGuideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuOpenGuideActionPerformed
        if (Desktop.isDesktopSupported()) {
            try {
                File f = new File("StabilityandAggregation.pdf");
               // System.out.println(f.getAbsolutePath());//
                if(f.exists() && !f.isDirectory()){
                    File myFile = new File("StabilityandAggregation.pdf");
                    Desktop.getDesktop().open(myFile);
                }else{
                    Toolkit.getDefaultToolkit().beep();
                    JOptionPane.showMessageDialog(null, 
                            ShowMessages.getOpenUserManual(), null, 
                            JOptionPane.WARNING_MESSAGE); 
                }
            } catch (IOException ex) {
                Toolkit.getDefaultToolkit().beep(); 
                JOptionPane.showMessageDialog(null, 
                            ShowMessages.getNoPDFSoftware(), null, 
                            JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_mnuOpenGuideActionPerformed

    private void mnuBrowsePdbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuBrowsePdbActionPerformed
        // This method opens the PDB webpage
        try {
            String url = "http://www.rcsb.org/pdb/home/home.do";
            java.awt.Desktop.getDesktop().browse(java.net.URI.create(url));
        } catch (IOException ex) {
            Toolkit.getDefaultToolkit().beep(); 
                JOptionPane.showMessageDialog(null, 
                            ShowMessages.getWebPDB(), null, 
                            JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_mnuBrowsePdbActionPerformed

    private void mnuCrystalIonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCrystalIonActionPerformed
        IonLibrary.setLibraryName("ShannonCrystalIonLibrary.txt");
        IonLibraryUI Crystal = new IonLibraryUI(); 
        Crystal.setVisible(true);
        File f = new File("ShannonCrystalIonLibrary.txt");
      //  System.out.println(f.getAbsolutePath());//
        
        //"ShannonCrystalIonLibrary.txt"
    }//GEN-LAST:event_mnuCrystalIonActionPerformed

    private void mnuEffectiveIonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuEffectiveIonActionPerformed
        IonLibrary.setLibraryName("ShannonEffectiveIonLibrary.txt");
        IonLibraryUI Effective = new IonLibraryUI(); 
        Effective.setVisible(true);
        
        //"ShannonEffectiveIonLibrary.txt"
    }//GEN-LAST:event_mnuEffectiveIonActionPerformed

    private void rbnPBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbnPBActionPerformed
        Utilities.setTheoryModel("PB");
        switch (PHModel.getAnalysisType()) {
            case "GLOBULAR_PROTEIN":
                {
                    SetEnvironment.set_directory();
                    Solute.setType("SPHERE");
                    BiomoleculesUI PB = new BiomoleculesUI();
                    PB.setVisible(true); 
                    break;
                }
            case "CYLINDRICAL_PROTEIN":
                {
                    SetEnvironment.set_directory();
                    Solute.setType("CYLINDER");
                    BiomoleculesUI PB = new BiomoleculesUI();
                    PB.setVisible(true); 
                    break;
                }
            case "NANOPARTICLE":
                {
                    SetEnvironment.set_directory();
                    Solute.setType("SPHERE");
                    NanomaterialsUI PB = new NanomaterialsUI();
                    PB.setVisible(true);
                    break;
                }
            case "NANOROD":
                {
                    SetEnvironment.set_directory();
                    Solute.setType("CYLINDER");
                    NanomaterialsUI PB = new NanomaterialsUI();
                    PB.setVisible(true);
                    break;
                }
        }
        SetEnvironment.set_directory();
    }//GEN-LAST:event_rbnPBActionPerformed

    private void rbnSPMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbnSPMActionPerformed
        Utilities.setTheoryModel("SPM");
        switch (PHModel.getAnalysisType()) {
            case "GLOBULAR_PROTEIN":
                {
                    SetEnvironment.set_directory();
                    Solute.setType("SPHERE");
                    BiomoleculesUI SPM = new BiomoleculesUI();
                    SPM.setVisible(true); 
                    break;
                }
            case "CYLINDRICAL_PROTEIN":
                {
                    SetEnvironment.set_directory();
                    Solute.setType("CYLINDER");
                    BiomoleculesUI SPM = new BiomoleculesUI();
                    SPM.setVisible(true); 
                    break;
                }
            case "NANOPARTICLE":
                {
                    SetEnvironment.set_directory();
                    Solute.setType("SPHERE");
                    NanomaterialsUI SPM = new NanomaterialsUI();
                    SPM.setVisible(true);
                    break;
                }
            case "NANOROD":
                {
                    SetEnvironment.set_directory();
                    Solute.setType("CYLINDER");
                    NanomaterialsUI SPM = new NanomaterialsUI();
                    SPM.setVisible(true);
                    break;
                }
        }
    }//GEN-LAST:event_rbnSPMActionPerformed

    private void rbnGlobularProteinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbnGlobularProteinActionPerformed
        if (rbnGlobularProtein.isSelected()){
            PHModel.setAnalysisType("GLOBULAR_PROTEIN");
            pnlAnalysisModules.setEnabled(true);
            rbnPB.setEnabled(true);
            rbnSPM.setEnabled(true);
            buttonGroup2.clearSelection();
        }else{
            pnlAnalysisModules.setEnabled(false);
            rbnPB.setEnabled(false);
            rbnSPM.setEnabled(false);
            buttonGroup2.clearSelection();
        }
    }//GEN-LAST:event_rbnGlobularProteinActionPerformed

    private void rbnBiopolymerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbnBiopolymerActionPerformed
        if (rbnBiopolymer.isSelected()){
            PHModel.setAnalysisType("CYLINDRICAL_PROTEIN");
            pnlAnalysisModules.setEnabled(true);
            rbnPB.setEnabled(true);
            rbnSPM.setEnabled(true);
            buttonGroup2.clearSelection();           
        }else{
            pnlAnalysisModules.setEnabled(false);
            rbnPB.setEnabled(false);
            rbnSPM.setEnabled(false);
            buttonGroup2.clearSelection();
        }
    }//GEN-LAST:event_rbnBiopolymerActionPerformed

    private void rbnNanoparticleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbnNanoparticleActionPerformed
        if (rbnNanoparticle.isSelected()){
            PHModel.setAnalysisType("NANOPARTICLE");
            pnlAnalysisModules.setEnabled(true);
            rbnPB.setEnabled(false);
            rbnSPM.setEnabled(true);
            buttonGroup2.clearSelection();
        }else{
            pnlAnalysisModules.setEnabled(false);
            rbnPB.setEnabled(false);
            rbnSPM.setEnabled(false);
            buttonGroup2.clearSelection();
        }
    }//GEN-LAST:event_rbnNanoparticleActionPerformed

    private void rbnNanorodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbnNanorodActionPerformed
        if (rbnNanorod.isSelected()){
            PHModel.setAnalysisType("NANOROD");
            pnlAnalysisModules.setEnabled(true);
            rbnPB.setEnabled(true);
            rbnSPM.setEnabled(true);
            buttonGroup2.clearSelection();
        }else{
            pnlAnalysisModules.setEnabled(false);
            rbnPB.setEnabled(false);
            rbnSPM.setEnabled(false);
            buttonGroup2.clearSelection();
        }
    }//GEN-LAST:event_rbnNanorodActionPerformed

    private void mnuHydratedIonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuHydratedIonActionPerformed
        // TODO add your handling code here:
            IonLibrary.setLibraryName("HydratedIonLibrary.txt");
        IonLibraryUI Effective = new IonLibraryUI(); 
        Effective.setVisible(true);
        
        //"ShannonEffectiveIonLibrary.txt"
    }//GEN-LAST:event_mnuHydratedIonActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : 
                    javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | 
                IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModelsUI.class.getName()).log(java.util.logging.Level.SEVERE, 
                            null, ex);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModelsUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.ButtonGroup buttonGroup1;
    public static javax.swing.ButtonGroup buttonGroup2;
    public static javax.swing.JMenuBar desktopModelsMenu;
    public static javax.swing.JPanel dkpModels;
    public static javax.swing.JMenuItem jMenuItem1;
    public static javax.swing.JMenuItem jMenuItem7;
    public static javax.swing.JMenuItem jMenuItem8;
    public static javax.swing.JPanel jPanel1;
    public static javax.swing.JPanel jPanel2;
    public static javax.swing.JSeparator jSeparator1;
    private static javax.swing.JLabel lbl1;
    public static javax.swing.JMenuItem mnuBrowsePdb;
    public static javax.swing.JMenuItem mnuContact;
    public static javax.swing.JMenuItem mnuCrystalIon;
    public static javax.swing.JMenuItem mnuEffectiveIon;
    public static javax.swing.JMenuItem mnuExit;
    public static javax.swing.JMenu mnuFile;
    public static javax.swing.JMenu mnuHelp;
    public static javax.swing.JMenuItem mnuLicense;
    public static javax.swing.JMenuItem mnuOpenGuide;
    public static javax.swing.JMenuItem mnuOpenOutput;
    public static javax.swing.JMenu mnuTools;
    private static javax.swing.JPanel pnlAnalysisModules;
    private static javax.swing.JPanel pnlContainer;
    private static javax.swing.JPanel pnlNanomaterials;
    private static javax.swing.JRadioButton rbnBiopolymer;
    private static javax.swing.JRadioButton rbnGlobularProtein;
    private static javax.swing.JRadioButton rbnNanoparticle;
    private static javax.swing.JRadioButton rbnNanorod;
    private static javax.swing.JRadioButton rbnPB;
    private static javax.swing.JRadioButton rbnSPM;
    // End of variables declaration//GEN-END:variables

}
